//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NUglify {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NUglify.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No source file(s) newer than the output file.
        /// </summary>
        internal static string AlreadyDone {
            get {
                return ResourceManager.GetString("AlreadyDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use Combined- and Individual-file properties at the same time..
        /// </summary>
        internal static string CannotUseCombinedAndIndividual {
            get {
                return ResourceManager.GetString("CannotUseCombinedAndIndividual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not delete output file: {0}.
        /// </summary>
        internal static string CouldNotDeleteOutputFile {
            get {
                return ResourceManager.GetString("CouldNotDeleteOutputFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not write expected output file: {0}.
        /// </summary>
        internal static string CouldNotWriteOutputFile {
            get {
                return ResourceManager.GetString("CouldNotWriteOutputFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting file &quot;{0}&quot;..
        /// </summary>
        internal static string DeletingFile {
            get {
                return ResourceManager.GetString("DeletingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not minify &apos;{0}&apos;: destination file &apos;{1}&apos; is read-only..
        /// </summary>
        internal static string DestinationIsReadOnly {
            get {
                return ResourceManager.GetString("DestinationIsReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not minify to destination file &apos;{0}&apos;: {1}.
        /// </summary>
        internal static string DidNotMinify {
            get {
                return ResourceManager.GetString("DidNotMinify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifying a folder input requires the use of the type attribute on the output group..
        /// </summary>
        internal static string DirectorySourceRequiresCodeType {
            get {
                return ResourceManager.GetString("DirectorySourceRequiresCodeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid encoding name: {0}.
        /// </summary>
        internal static string InvalidEncodingName {
            get {
                return ResourceManager.GetString("InvalidEncodingName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid property value to NUglify build task: &apos;{0}&apos;.
        /// </summary>
        internal static string InvalidInputParameter {
            get {
                return ResourceManager.GetString("InvalidInputParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid JSON Output.
        /// </summary>
        internal static string InvalidJSONOutput {
            get {
                return ResourceManager.GetString("InvalidJSONOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid symbol map implementation name: &apos;{0}&apos;. No symbol map generated..
        /// </summary>
        internal static string InvalidSymbolMapName {
            get {
                return ResourceManager.GetString("InvalidSymbolMapName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did not generate symbol map: destination file &apos;{0}&apos; is read-only..
        /// </summary>
        internal static string MapDestinationIsReadOnly {
            get {
                return ResourceManager.GetString("MapDestinationIsReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No JavaScript files to minify.
        /// </summary>
        internal static string NoJavaScriptToMinify {
            get {
                return ResourceManager.GetString("NoJavaScriptToMinify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No CSS files to minify.
        /// </summary>
        internal static string NoStyleSheetsToMinify {
            get {
                return ResourceManager.GetString("NoStyleSheetsToMinify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No permission to minify to destination file &apos;{0}&apos;.
        /// </summary>
        internal static string NoWritePermission {
            get {
                return ResourceManager.GetString("NoWritePermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required input file doesn&apos;t exist: {0}.
        /// </summary>
        internal static string RequiredInputDoesntExist {
            get {
                return ResourceManager.GetString("RequiredInputDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required NUglify build task property &apos;{0}&apos; is missing or empty..
        /// </summary>
        internal static string RequiredParameterIsEmpty {
            get {
                return ResourceManager.GetString("RequiredParameterIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output file {0} skipped.
        /// </summary>
        internal static string SkippedOutputFile {
            get {
                return ResourceManager.GetString("SkippedOutputFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Errors were encountered..
        /// </summary>
        internal static string ThereWereErrors {
            get {
                return ResourceManager.GetString("ThereWereErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to determine code type from input file extensions. Please us type attribute on the output group..
        /// </summary>
        internal static string UnknownCodeType {
            get {
                return ResourceManager.GetString("UnknownCodeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource files can only be .RESX or .RESOURCES files.
        /// </summary>
        internal static string UnsupportedResourceType {
            get {
                return ResourceManager.GetString("UnsupportedResourceType", resourceCulture);
            }
        }
    }
}
