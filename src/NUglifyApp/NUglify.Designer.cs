//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NUglify {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class NUglify {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal NUglify() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NUglify.NUglify", typeof(NUglify).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [Anonymous] ähnelt.
        /// </summary>
        internal static string AnonymousName {
            get {
                return ResourceManager.GetString("AnonymousName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} - starts at line {1}, col {2} {3} ähnelt.
        /// </summary>
        internal static string BlockScopeHeader {
            get {
                return ResourceManager.GetString("BlockScopeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Catch Scope ähnelt.
        /// </summary>
        internal static string BlockTypeCatch {
            get {
                return ResourceManager.GetString("BlockTypeCatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Class {0} ähnelt.
        /// </summary>
        internal static string BlockTypeClass {
            get {
                return ResourceManager.GetString("BlockTypeClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lexical Scope ähnelt.
        /// </summary>
        internal static string BlockTypeLexical {
            get {
                return ResourceManager.GetString("BlockTypeLexical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Module {0} ähnelt.
        /// </summary>
        internal static string BlockTypeModule {
            get {
                return ResourceManager.GetString("BlockTypeModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die With Scope ähnelt.
        /// </summary>
        internal static string BlockTypeWith {
            get {
                return ResourceManager.GetString("BlockTypeWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Conflicting input type switches or input file extensions (JS and CSS) ähnelt.
        /// </summary>
        internal static string ConflictingInputType {
            get {
                return ResourceManager.GetString("ConflictingInputType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  [{1} references renamed to {0}] ähnelt.
        /// </summary>
        internal static string CrunchedTo {
            get {
                return ResourceManager.GetString("CrunchedTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {6}{0} {1} - starts at line {2}, col {3} {4} {5} ähnelt.
        /// </summary>
        internal static string FunctionHeader {
            get {
                return ResourceManager.GetString("FunctionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} references ähnelt.
        /// </summary>
        internal static string FunctionInfoReferences {
            get {
                return ResourceManager.GetString("FunctionInfoReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Arrow Function ähnelt.
        /// </summary>
        internal static string FunctionTypeArrow {
            get {
                return ResourceManager.GetString("FunctionTypeArrow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Function Expression ähnelt.
        /// </summary>
        internal static string FunctionTypeExpression {
            get {
                return ResourceManager.GetString("FunctionTypeExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Function ähnelt.
        /// </summary>
        internal static string FunctionTypeFunction {
            get {
                return ResourceManager.GetString("FunctionTypeFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Generator  ähnelt.
        /// </summary>
        internal static string FunctionTypeGenerator {
            get {
                return ResourceManager.GetString("FunctionTypeGenerator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Method ähnelt.
        /// </summary>
        internal static string FunctionTypeMethod {
            get {
                return ResourceManager.GetString("FunctionTypeMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Property Get ähnelt.
        /// </summary>
        internal static string FunctionTypePropGet {
            get {
                return ResourceManager.GetString("FunctionTypePropGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Property Set ähnelt.
        /// </summary>
        internal static string FunctionTypePropSet {
            get {
                return ResourceManager.GetString("FunctionTypePropSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Global Objects ähnelt.
        /// </summary>
        internal static string GlobalObjectsHeader {
            get {
                return ResourceManager.GetString("GlobalObjectsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error processing input XML: {0} ähnelt.
        /// </summary>
        internal static string InputXmlError {
            get {
                return ResourceManager.GetString("InputXmlError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid switch: {0} ähnelt.
        /// </summary>
        internal static string InvalidArgument {
            get {
                return ResourceManager.GetString("InvalidArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid switch argument {0} for switch -{1} ähnelt.
        /// </summary>
        internal static string InvalidSwitchArg {
            get {
                return ResourceManager.GetString("InvalidSwitchArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die -MAP and -XML switches are not compatible ähnelt.
        /// </summary>
        internal static string MapAndXmlArgs {
            get {
                return ResourceManager.GetString("MapAndXmlArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die -O parameter must be followed by symbol map file path ähnelt.
        /// </summary>
        internal static string MapArgNeedsPath {
            get {
                return ResourceManager.GetString("MapArgNeedsPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die function ähnelt.
        /// </summary>
        internal static string MemberInfoBuiltInMethod {
            get {
                return ResourceManager.GetString("MemberInfoBuiltInMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die property ähnelt.
        /// </summary>
        internal static string MemberInfoBuiltInProperty {
            get {
                return ResourceManager.GetString("MemberInfoBuiltInProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die class ähnelt.
        /// </summary>
        internal static string MemberInfoClass {
            get {
                return ResourceManager.GetString("MemberInfoClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die const ähnelt.
        /// </summary>
        internal static string MemberInfoConst {
            get {
                return ResourceManager.GetString("MemberInfoConst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  [defined ({0},{1})] ähnelt.
        /// </summary>
        internal static string MemberInfoDefinedLocation {
            get {
                return ResourceManager.GetString("MemberInfoDefinedLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die   {0} [{1}{2}]{3}{4} ähnelt.
        /// </summary>
        internal static string MemberInfoFormat {
            get {
                return ResourceManager.GetString("MemberInfoFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die function ähnelt.
        /// </summary>
        internal static string MemberInfoFunction {
            get {
                return ResourceManager.GetString("MemberInfoFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die function expression ähnelt.
        /// </summary>
        internal static string MemberInfoFunctionExpression {
            get {
                return ResourceManager.GetString("MemberInfoFunctionExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die literal var ähnelt.
        /// </summary>
        internal static string MemberInfoLiteral {
            get {
                return ResourceManager.GetString("MemberInfoLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die possibly undefined ähnelt.
        /// </summary>
        internal static string MemberInfoPossiblyUndefined {
            get {
                return ResourceManager.GetString("MemberInfoPossiblyUndefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [{0} references] ähnelt.
        /// </summary>
        internal static string MemberInfoReferences {
            get {
                return ResourceManager.GetString("MemberInfoReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die exported  ähnelt.
        /// </summary>
        internal static string MemberInfoScopeExported {
            get {
                return ResourceManager.GetString("MemberInfoScopeExported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die global ähnelt.
        /// </summary>
        internal static string MemberInfoScopeGlobal {
            get {
                return ResourceManager.GetString("MemberInfoScopeGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die built-in Global  ähnelt.
        /// </summary>
        internal static string MemberInfoScopeGlobalObject {
            get {
                return ResourceManager.GetString("MemberInfoScopeGlobalObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die local  ähnelt.
        /// </summary>
        internal static string MemberInfoScopeLocal {
            get {
                return ResourceManager.GetString("MemberInfoScopeLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die outer  ähnelt.
        /// </summary>
        internal static string MemberInfoScopeOuter {
            get {
                return ResourceManager.GetString("MemberInfoScopeOuter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die argument ähnelt.
        /// </summary>
        internal static string MemberInfoTypeArgument {
            get {
                return ResourceManager.GetString("MemberInfoTypeArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die arguments array ähnelt.
        /// </summary>
        internal static string MemberInfoTypeArguments {
            get {
                return ResourceManager.GetString("MemberInfoTypeArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die catch error ähnelt.
        /// </summary>
        internal static string MemberInfoTypeCatchEror {
            get {
                return ResourceManager.GetString("MemberInfoTypeCatchEror", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die super ähnelt.
        /// </summary>
        internal static string MemberInfoTypeSuper {
            get {
                return ResourceManager.GetString("MemberInfoTypeSuper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die var ähnelt.
        /// </summary>
        internal static string MemberInfoVar {
            get {
                return ResourceManager.GetString("MemberInfoVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die object property ähnelt.
        /// </summary>
        internal static string MemberInfoWithField {
            get {
                return ResourceManager.GetString("MemberInfoWithField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [or lexical declaration] ähnelt.
        /// </summary>
        internal static string MemberInfoWithLexDecl {
            get {
                return ResourceManager.GetString("MemberInfoWithLexDecl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [or lexical function] ähnelt.
        /// </summary>
        internal static string MemberInfoWithLexFunc {
            get {
                return ResourceManager.GetString("MemberInfoWithLexFunc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [or {0}{1}] ähnelt.
        /// </summary>
        internal static string MemberInfoWithPossibly {
            get {
                return ResourceManager.GetString("MemberInfoWithPossibly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minifying from STDIN ähnelt.
        /// </summary>
        internal static string MinifyFromStdIn {
            get {
                return ResourceManager.GetString("MinifyFromStdIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Combining and minifying: ähnelt.
        /// </summary>
        internal static string MinifyingMultipleInputs {
            get {
                return ResourceManager.GetString("MinifyingMultipleInputs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minifying &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string MinifySingleInput {
            get {
                return ResourceManager.GetString("MinifySingleInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die See the &apos;-?&apos; command-line option for usage details. ähnelt.
        /// </summary>
        internal static string MiniUsageMessage {
            get {
                return ResourceManager.GetString("MiniUsageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die   [Module has default export] ähnelt.
        /// </summary>
        internal static string ModuleHasDefaultExport {
            get {
                return ResourceManager.GetString("ModuleHasDefaultExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [incomplete] ähnelt.
        /// </summary>
        internal static string ModuleIncompleteFlag {
            get {
                return ResourceManager.GetString("ModuleIncompleteFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [implicit] ähnelt.
        /// </summary>
        internal static string ModuleNameImplicit {
            get {
                return ResourceManager.GetString("ModuleNameImplicit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Symbol map file already specified ähnelt.
        /// </summary>
        internal static string MultipleMapArg {
            get {
                return ResourceManager.GetString("MultipleMapArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output file already specified ähnelt.
        /// </summary>
        internal static string MultipleOutputArg {
            get {
                return ResourceManager.GetString("MultipleOutputArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot specify multiple -XML arguments ähnelt.
        /// </summary>
        internal static string MultipleXmlArgs {
            get {
                return ResourceManager.GetString("MultipleXmlArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File already exists and clobber option is not set to true. Output not created: {0} ähnelt.
        /// </summary>
        internal static string NoClobberError {
            get {
                return ResourceManager.GetString("NoClobberError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No input files to process ähnelt.
        /// </summary>
        internal static string NoInput {
            get {
                return ResourceManager.GetString("NoInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No parsed code block ähnelt.
        /// </summary>
        internal static string NoParsedCode {
            get {
                return ResourceManager.GetString("NoParsedCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NOT KNOWN ähnelt.
        /// </summary>
        internal static string NotKnown {
            get {
                return ResourceManager.GetString("NotKnown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die -O parameter must be followed by output path ähnelt.
        /// </summary>
        internal static string OutputArgNeedsPath {
            get {
                return ResourceManager.GetString("OutputArgNeedsPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minified output is EMPTY! ähnelt.
        /// </summary>
        internal static string OutputEmpty {
            get {
                return ResourceManager.GetString("OutputEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output file returned an error code: {0} ähnelt.
        /// </summary>
        internal static string OutputFileError {
            get {
                return ResourceManager.GetString("OutputFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die output file ähnelt.
        /// </summary>
        internal static string OutputFileErrorSubCat {
            get {
                return ResourceManager.GetString("OutputFileErrorSubCat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output group #{0} returned an error code: {1} ähnelt.
        /// </summary>
        internal static string OutputGroupError {
            get {
                return ResourceManager.GetString("OutputGroupError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die output group ähnelt.
        /// </summary>
        internal static string OutputGroupErrorSubCat {
            get {
                return ResourceManager.GetString("OutputGroupErrorSubCat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pretty-print (-PRETTY) and Echo-input (-ECHO) switches are not compatible ähnelt.
        /// </summary>
        internal static string PrettyAndEchoArgs {
            get {
                return ResourceManager.GetString("PrettyAndEchoArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Processing resource script {0}... ähnelt.
        /// </summary>
        internal static string ReadingResourceFile {
            get {
                return ResourceManager.GetString("ReadingResourceFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename switch must either have valid parameter parts or be followed by valid file path ähnelt.
        /// </summary>
        internal static string RenameArgMissingParameterOrFilePath {
            get {
                return ResourceManager.GetString("RenameArgMissingParameterOrFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resource argument &apos;{0}&apos; must be valid boolean or numeric literal ähnelt.
        /// </summary>
        internal static string ResourceArgInvalidName {
            get {
                return ResourceManager.GetString("ResourceArgInvalidName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid resource file type: {0}. Must be .JS, .RESX, or .RESOURCES. ähnelt.
        /// </summary>
        internal static string ResourceArgInvalidType {
            get {
                return ResourceManager.GetString("ResourceArgInvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die -RES parameter must be followed by path to existing resource file ähnelt.
        /// </summary>
        internal static string ResourceArgNeedsPath {
            get {
                return ResourceManager.GetString("ResourceArgNeedsPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gzip of minified output approx. {0} bytes ({1}% compression) ähnelt.
        /// </summary>
        internal static string SavingsGzipMessage {
            get {
                return ResourceManager.GetString("SavingsGzipMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gzip of source input approx. {0} bytes ({1}% compression) ähnelt.
        /// </summary>
        internal static string SavingsGzipSourceMessage {
            get {
                return ResourceManager.GetString("SavingsGzipSourceMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Original Size: {0} bytes; reduced size: {1} bytes ({2}% minification) ähnelt.
        /// </summary>
        internal static string SavingsMessage {
            get {
                return ResourceManager.GetString("SavingsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [strict] ähnelt.
        /// </summary>
        internal static string ScopeIsStrictFlag {
            get {
                return ResourceManager.GetString("ScopeIsStrictFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Source file cannot be a folder: {0} ähnelt.
        /// </summary>
        internal static string SourceFileIsFolder {
            get {
                return ResourceManager.GetString("SourceFileIsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Source file does not exist: {0} ähnelt.
        /// </summary>
        internal static string SourceFileNotExist {
            get {
                return ResourceManager.GetString("SourceFileNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Analyzing Nodes ähnelt.
        /// </summary>
        internal static string StepAnalyzeNode {
            get {
                return ResourceManager.GetString("StepAnalyzeNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Analyzing Scopes ähnelt.
        /// </summary>
        internal static string StepAnalyzeScope {
            get {
                return ResourceManager.GetString("StepAnalyzeScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auto-Renaming ähnelt.
        /// </summary>
        internal static string StepAutoRename {
            get {
                return ResourceManager.GetString("StepAutoRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Evaluating Literals ähnelt.
        /// </summary>
        internal static string StepEvaluateLiterals {
            get {
                return ResourceManager.GetString("StepEvaluateLiterals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Final Pass ähnelt.
        /// </summary>
        internal static string StepFinalPass {
            get {
                return ResourceManager.GetString("StepFinalPass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parsing ähnelt.
        /// </summary>
        internal static string StepParse {
            get {
                return ResourceManager.GetString("StepParse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reordering ähnelt.
        /// </summary>
        internal static string StepReorder {
            get {
                return ResourceManager.GetString("StepReorder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolving References ähnelt.
        /// </summary>
        internal static string StepResolve {
            get {
                return ResourceManager.GetString("StepResolve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Validating Generated Names ähnelt.
        /// </summary>
        internal static string StepValidateNames {
            get {
                return ResourceManager.GetString("StepValidateNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Switch -{0} requires an argument ähnelt.
        /// </summary>
        internal static string SwitchRequiresArg {
            get {
                return ResourceManager.GetString("SwitchRequiresArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parse time: {1:F0}ms. ähnelt.
        /// </summary>
        internal static string TimerFormat {
            get {
                return ResourceManager.GetString("TimerFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parse time for input group {0}: {1:F0}ms. ähnelt.
        /// </summary>
        internal static string TimerMultiFormat {
            get {
                return ResourceManager.GetString("TimerMultiFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die     Step {0}: {1,4:F0}ms {2} ähnelt.
        /// </summary>
        internal static string TimerStepFormat {
            get {
                return ResourceManager.GetString("TimerStepFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Undefined Global References: ähnelt.
        /// </summary>
        internal static string UndefinedGlobalHeader {
            get {
                return ResourceManager.GetString("UndefinedGlobalHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die   {0} [{3}] at Line {1}, Column {2} ähnelt.
        /// </summary>
        internal static string UndefinedInfo {
            get {
                return ResourceManager.GetString("UndefinedInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown input type. Please use either the -JS or -CSS switch. ähnelt.
        /// </summary>
        internal static string UnknownInputType {
            get {
                return ResourceManager.GetString("UnknownInputType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UNREACHABLE ähnelt.
        /// </summary>
        internal static string Unreachable {
            get {
                return ResourceManager.GetString("Unreachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Usage:
        ///{0} [([-JS] [JSOPTS])|([-CSS[:CSSTYP]] [CSSOPTS])] OPTS* ((IFILE* [-out OFILE] [-map MFILE])|(-xml XFILE [-out ODIR]))
        ///
        ///Valid OPTS are zero or more of:
        ///  -aspnet[:BOOL] &gt; whether to allow for inline ASP.NET-style substitutions,
        ///        &lt;% ... %&gt; Default is False. 
        ///  -braces:(new|same|source) &gt; when output is set to multiple lines, 
        ///        determines whether opening braces are written on their own new line, 
        ///        at the end of the previous line, or reflecting what is in the source
        ///        [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string Usage {
            get {
                return ResourceManager.GetString("Usage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot specify -XML argument AND input files ähnelt.
        /// </summary>
        internal static string XmlArgHasInputFiles {
            get {
                return ResourceManager.GetString("XmlArgHasInputFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Argument -XML must be followed by XML file path ähnelt.
        /// </summary>
        internal static string XmlArgNeedsPath {
            get {
                return ResourceManager.GetString("XmlArgNeedsPath", resourceCulture);
            }
        }
    }
}
